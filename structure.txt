/local/modules/pragma.import_module/
    ├── install/
    │   ├── index.php
    │   └── version.php
    ├── lang/
    │   └── ru/
    ├── lib/
    │   ├── agent/
    │   │   ├── main_code
    │   │   │   ├── CatalogItemCopier.php // Четвертый этап (пока не реализовано) 
    │   │   │   ├── IblockPropertiesCopier.php // Первый этап (Копируем свойства инфоблока IBLOCK_ID_IMPORT и создаем их или обновляем в IBLOCK_ID_CATALOG)
    │   │   │   ├── SectionTreeCreator.php // Второй этап (пока не реализовано) 
    │   │   │   └── TradeOfferSorter.php // Третий этап (пока не реализовано) 
    │   │   ├── CheckAgent.php // Класс для функций запускаемых агентом который отслеживает окончание выгрузки (пока не реализовано) 
    │   │   └── ImportAgent.php // Класс для функций запускаемых агентом который выполяет 4 этапа копирования элементов из инфоблока выгрузки, запускается по расписанию как обычный агент если 'AUTO_MODE' => 'N', или в конце выгрузки если 'AUTO_MODE' => 'Y'(автоматический режим пока не реализован)
    │   ├── css/
    │   │   └── styles.css
    │   ├── AgentManager.php // Класс для управления агентами 
    │   ├── ajax.php // Получает списки разделов при загрузке страницы и сменен инфоблоков
    │   ├── CacheHelper.php //  Класс для записи, обновления и чтения в кеше списков разделов и списков инфоблоков
    │   ├── EventHandlers.php // Класс для работы с событиями выгрузки из 1С
    │   ├── IblockHelper.php // Класс для построения списки инфоблоков
    │   ├── ImportChecker.php // Класс для отслеживания окончание выгрузки используя события из EventHandlers.php в автоматическом режиме 'AUTO_MODE' => 'Y' и запускает агент ImportAgent.php через DELAY_TIME после окончания выгрузки(пока не реализовано)
    │   ├── Logger.php
    │   └── SectionHelper.php // Класс для построения списков разделов
    ├── logs/
    ├── options.php
    ├── include.php
    └── default_option.php

Это CMS битрикс и мы используем его API, агент запускается, 
1)1 этап это копирование всех свойств и свойства этих свойств из инфоблока IBLOCK_ID_IMPORT в инфлблок IBLOCK_ID_CATALOG
2)2 этап это проход по элементам и составления дерева вложенности, которое мы записываем в файл (пока не разрабатываем )
Пример:

SECTION_MAPPINGS = Array
(
    [0] => Array
        (
            [SECTION_ID] => 1433
            [PROPERTIES] => Array
                (
                    [0] => Спальный мешок
                )

        )

    [1] => Array
        (
            [SECTION_ID] => 1434
            [PROPERTIES] => Array
                (
                    [0] => Носки
                    [1] => Майка
                )

        )

    [2] => Array
        (
            [SECTION_ID] => 1432
            [PROPERTIES] => Array
                (
                    [0] => Трусы
                    [1] => Шапка
                )

        )
)

Если в названии элемента есть подстрока , то он определяется в определеный подраздел 
Например есть товар с названием  
"Спальный мешок пуховый Сплав Adventure Permafrost оранжевый|220"
Подстрока 'Спальный мешок' находится в [SECTION_MAPPINGS][0][PROPERTIES][0] => Спальный мешок

Значит это будет выглядит так 

Array
(
    [1433] => Array
        (
            [ELEMENTS] => Array
                (
                    [0] => Array
                    (
                        [NAME] => Спальный мешок пуховый Сплав Adventure Permafrost оранжевый|220
                        [ID] => 273306
                        [XML_ID] => d1f16038-db2e-11ec-80c2-00155d7ecf0c
                        [CML2_ARTICLE] => 4503576
                        [CML2_BAR_CODE] => 24503576220
                    )
                )

        )

    [1434] => Array
        (

        )

    [1432] => Array
        (
           
        )
)


3)3 этап упорядочеваем элементы в массиве по еще одному принципу (пока не разрабатываем )
4)4 этап копируем елементы из одного инфоблока в другой по этому массиву (пока не разрабатываем )